@page "{id:int?}"
@model Presentation.Pages.NewsArticleManagement.FormModel
@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title">@(Model.IsCreate ? "Create" : "Edit") News Article</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
</div>

<form method="post" id="articleForm" onsubmit="return submitForm(this);">
    <div class="modal-body">
        <input type="hidden" asp-for="Article.NewsArticleId" />
        <input type="hidden" asp-for="Article.CreatedById" value="@Model.CurrentUserId" />

        <!-- Title -->
        <div class="mb-3">
            <label asp-for="Article.NewsTitle" class="form-label">Title</label>
            <input asp-for="Article.NewsTitle" class="form-control" />
            <span asp-validation-for="Article.NewsTitle" class="text-danger"></span>
        </div>

        <!-- Headline -->
        <div class="mb-3">
            <label asp-for="Article.Headline" class="form-label">Headline</label>
            <input asp-for="Article.Headline" class="form-control" />
            <span asp-validation-for="Article.Headline" class="text-danger"></span>
        </div>

        <!-- Content -->
        <div class="mb-3">
            <label asp-for="Article.NewsContent" class="form-label">Content</label>
            <textarea asp-for="Article.NewsContent" class="form-control" rows="5"></textarea>
            <span asp-validation-for="Article.NewsContent" class="text-danger"></span>
        </div>

        <!-- Category -->
        <div class="mb-3">
            <label asp-for="Article.CategoryId" class="form-label">Category</label>
            <select asp-for="Article.CategoryId" class="form-select"
                    asp-items="@(new SelectList(Model.Categories, "CategoryId", "CategoryName"))">
                <option value="">-- Select Category --</option>
            </select>
            <span asp-validation-for="Article.CategoryId" class="text-danger"></span>
        </div>

        <!-- Tags -->
        <div class="mb-3">
            <label class="form-label">Tags</label>
            <div class="border rounded p-2" style="max-height: 180px; overflow-y: auto;">
                @foreach (var tag in Model.Tags)
                {
                    var isChecked = Model.SelectedTags.Contains(tag.TagId);
                    <div class="form-check">
                        <input class="form-check-input"
                               type="checkbox"
                               name="SelectedTags"
                               value="@tag.TagId"
                               id="tag_@tag.TagId"
                        @(isChecked ? "checked" : "") />
                        <label class="form-check-label" for="tag_@tag.TagId">@tag.TagName</label>
                    </div>
                }
            </div>
        </div>

        <!-- Published -->
        <div class="mb-3">
            <div class="form-check form-switch">
                <input type="hidden" name="Article.NewsStatus" value="false" />
                <input type="checkbox"
                       class="form-check-input"
                       id="publishedSwitch"
                       name="Article.NewsStatus"
                       value="true"
                @(Model.Article.NewsStatus ? "checked" : "") />
                <label class="form-check-label" for="publishedSwitch">Published</label>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary" id="saveBtn">Save</button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    function submitForm(form) {
        const btn = $("#saveBtn");
        btn.prop("disabled", true).html('<span class="spinner-border spinner-border-sm me-1"></span>Saving...');

        $.ajax({
            type: "POST",
            url: form.action || window.location.href,
            data: $(form).serialize(),
            success: function (result) {
                btn.prop("disabled", false).html("Save");

                if (result.success) {
                    // ✅ 1. Hiện thông báo thành công
                    toastr.success("News article saved successfully!", "Success");

                    // ✅ 2. Đóng modal
                    $("#form-modal").modal("hide");

                    // ✅ 3. Reload lại danh sách bài viết (nếu có)
                    if (typeof loadArticles === "function") {
                        loadArticles();
                    } else {
                        location.reload();
                    }
                } else {
                    let errorHtml = '<div class="alert alert-danger">';
                    if (result.errors) {
                        for (const key in result.errors) {
                            errorHtml += `<p>${result.errors[key]}</p>`;
                        }
                    } else {
                        errorHtml += `<p>${result.error || "An error occurred."}</p>`;
                    }
                    errorHtml += "</div>";

                    $(form).find(".modal-body").prepend(errorHtml);
                    $(".modal-body").scrollTop(0);
                }
            },
            error: function (xhr) {
                btn.prop("disabled", false).html("Save");
                toastr.error("Failed to save article. Error " + xhr.status, "Error");
            }
        });
        return false;
    }
</script>
