@page
@model Presentation.Pages.NewsArticleManagement.IndexModel
@{
    ViewData["Title"] = "News Articles";
}

@* <div class="container-fluid"> *@
@*     <h2 class="text-primary">News Articles</h2> *@

@*     @if (TempData["SuccessMessage"] != null) *@
@*     { *@
@*         <div class="alert alert-success alert-dismissible fade show" role="alert"> *@
@*             @TempData["SuccessMessage"] *@
@*             <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> *@
@*         </div> *@
@*     } *@

    <div class="row">
        <div class="col-6">
            @if (Model.IsStaff)
            {
                <a onclick="showInPopup('/NewsArticleManagement/Form', 'Create News Article')" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New
                </a>
            }
        </div>
    </div>

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Category</th>
                <th>Tags</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in Model.Articles)
            {
                <tr>
                                   <td>@article.NewsTitle</td>
                                   <td>@article.CreatedBy?.AccountName</td>
                                   <td>@article.Category?.CategoryName</td>
                                   <td>@string.Join(", ", article.Tags.Select(t => t.TagName))</td>
                                   <td>@(article.NewsStatus ? "Published" : "Draft")</td>
                                   <td>
                                       <div class="btn-group" role="group">
                                           <a onclick="showInPopup('/NewsArticleManagement/Form?id=@article.NewsArticleId', 'Edit News Article')" 
                                              class="btn btn-primary">
                                               <i class="bi bi-pencil"></i> Edit
                                           </a>

                                           @if (Model.IsStaff)
                                           {
                                <form method="post" asp-page-handler="Delete" asp-route-id="@article.NewsArticleId"
                                      onsubmit="return confirm('Are you sure you want to delete this article?');"
                                                     style="display: inline;">
                                                   <button type="submit" class="btn btn-danger">
                                                       <i class="bi bi-trash"></i> Delete
                                                   </button>
                                               </form>
                                           }
                                       </div>
                                   </td>
                               </tr>
            }
        </tbody>
    </table>
</div>

@* @section Scripts { *@
@*     <script> *@
@*         // Show form in modal popup *@
@*         function showInPopup(url, title) { *@
@*             $.ajax({ *@
@*                 type: "GET", *@
@*                 url: url, *@
@*                 success: function (res) { *@
@*                     $("#form-modal .modal-body").html(res); *@
@*                     $("#form-modal .modal-title").html(title); *@
@*                     $("#form-modal").modal('show'); *@
@*                 } *@
@*             }); *@
@*         } *@

        // Close modal after successful form submission
        function closeModal() {
            $("#form-modal").modal('hide');
            // Reload the page to show updated data
            location.reload();
        }
    </script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
          .withUrl("/notificationHub")
          .withAutomaticReconnect()
          .build();

        connection.on("ForceLogout", (payload) => {
          // Xoá state cục bộ nếu có
          // localStorage.clear();

          // Điều hướng sang logout (huỷ cookie/session phía server)
          const reason = payload?.reason || "force";
          window.location.href = "/AccountManagement/Login/Logout";
        });

        connection.onreconnected(() => {
          // Re-join group nếu cần
          connection.invoke("RegisterConnection", window.currentAccountId?.toString());
        });

        connection.start()
          .then(() => connection.invoke("RegisterConnection", window.currentAccountId?.toString()))
          .catch(err => console.error(err));
    </script>

}
