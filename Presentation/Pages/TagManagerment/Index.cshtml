@page 
@model Presentation.Pages.TagManagement.IndexModel
@{
    ViewData["Title"] = "Tag Management";
}

<h2>Tag Management</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<button id="btnCreate" class="btn btn-success mb-3"
        data-url="@Url.Page("Index", "CreatePopup")">
    + New Tag
</button>

<table class="table table-bordered table-striped">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Note</th>
            <th style="width:140px;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tag in Model.Tags)
        {
            <tr>
                <td>@tag.TagName</td>
                <td>@tag.Note</td>
                <td>
                    <button class="btn btn-sm btn-warning btn-edit"
                            data-url="@Url.Page("Index", "EditPopup", new { id = tag.TagId })">
                        Edit
                    </button>
                    <form asp-page-handler="Delete" asp-route-id="@tag.TagId" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="button" class="btn btn-sm btn-danger btn-delete">Delete</button>
                    </form>
                </td>
            </tr>
        }
        @if (!Model.Tags.Any())
        {
            <tr><td colspan="3" class="text-center">No tags found.</td></tr>
        }
    </tbody>
</table>

<div class="modal fade" id="crudModal" tabindex="-1" aria-labelledby="crudModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div>
            <div class="modal-body">Are you sure you want to delete this tag? This action cannot be undone.</div>
            <div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button><button type="button" class="btn btn-danger" id="btnConfirmDelete">Confirm Delete</button></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

    <script>
        $(function () {
        @if (TempData["ToastMessage"] != null)
        {
            <text>
                        toastr.success('@TempData["ToastMessage"]');
            </text>
        }
        @if (TempData["ToastError"] != null)
        {
            <text>
                        toastr.error('@TempData["ToastError"]');
            </text>
        }
            const crudModalElement = document.getElementById('crudModal');
            const crudModal = new bootstrap.Modal(crudModalElement);
            $('#btnCreate, .btn-edit').on('click', function () { loadForm($(this).data('url')); });

            function loadForm(url) {
              
                $('#crudModal .modal-content').html('<div class="modal-body text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>');
                crudModal.show(); 

                $.get(url, function (html) {
                    $('#crudModal .modal-content').html(html);
                    $.validator.unobtrusive.parse('#crudModal form');
                    bindAjaxForm();
                }).fail(function() {
                    $('#crudModal .modal-content').html('<div class="modal-header"><h5 class="modal-title">Error</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body"><p>Could not load the form. Please try again.</p></div>');
                });
            }

            function bindAjaxForm() {
                const form = $('#crudModal form'); 
                form.on('submit', function (e) {
                    e.preventDefault();
                    if (!form.valid()) { 
                        return;
                    }

                    $.post(form.attr('action'), form.serialize())
                        .done(function (res) {
                            
                            if (res && res.success === true) {
                                crudModal.hide();
                                location.reload();
                            } else {
                                
                                $('#crudModal .modal-content').html(res);
                                
                                $.validator.unobtrusive.parse('#crudModal form');
                                bindAjaxForm();
                            }
                        })
                        .fail(function (xhr, status, error) {
                            
                            console.error("AJAX Error:", status, error, xhr.responseText);
                           
                             const errorMsg = '<div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">An error occurred while saving. Please try again. ('+ (xhr.statusText || error) +')<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>';
                            
                             $('#crudModal .modal-body').find('.alert-danger').remove();
                             $('#crudModal .modal-body').prepend(errorMsg);
                        });
                });
            }

           
            const deleteModalElement = document.getElementById('deleteConfirmModal');
            const deleteModal = new bootstrap.Modal(deleteModalElement);
            let formToDelete;
            $('.btn-delete').on('click', function (e) { e.preventDefault(); formToDelete = $(this).closest('form'); deleteModal.show(); });
            $('#btnConfirmDelete').on('click', function () { if (formToDelete) { formToDelete.submit(); } });

        });
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}