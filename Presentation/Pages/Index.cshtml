@page
@model IndexModel
@{
    ViewData["Title"] = "News Articles";
}

<div class="container mt-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <h1 class="display-4">Latest News</h1>
            <p class="lead">Stay updated with our latest articles and stories</p>
        </div>
    </div>

    <!-- Search Bar -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <form method="get" class="d-flex">
                <input type="text" name="search" class="form-control me-2" 
                       placeholder="Search articles..." value="@Model.Search" />
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-search"></i> Search
                </button>
                @if (!string.IsNullOrEmpty(Model.Search))
                {
                    <a asp-page="/Index" class="btn btn-outline-secondary ms-2">
                        <i class="bi bi-x-circle"></i> Clear
                    </a>
                }
            </form>
        </div>
    </div>

    @if (Model.Articles.Any())
    {
        <!-- Articles Grid -->
        <div class="row">
            @foreach (var article in Model.Articles)
            {
                <div class="col-lg-6 mb-4">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <!-- Category Badge -->
                            @if (article.Category != null)
                            {
                                <div class="mb-2">
                                    <span class="badge bg-primary">
                                        <i class="bi bi-folder"></i> @article.Category.CategoryName
                                    </span>
                                </div>
                            }

                            <!-- Article Title -->
                            <h5 class="card-title fw-bold">
                                <a asp-page="/NewsArticleManagement/Details" asp-route-id="@article.NewsArticleId" 
                                   class="text-decoration-none text-dark">
                                    @article.NewsTitle
                                </a>
                            </h5>

                            <!-- Headline/Excerpt -->
                            @if (!string.IsNullOrEmpty(article.Headline))
                            {
                                <p class="card-text text-muted">@article.Headline</p>
                            }
                            else if (!string.IsNullOrEmpty(article.NewsContent))
                            {
                                <p class="card-text text-muted">
                                    @(article.NewsContent.Length > 150 
                                        ? article.NewsContent.Substring(0, 150) + "..." 
                                        : article.NewsContent)
                                </p>
                            }

                            <!-- Tags -->
                            @if (article.Tags.Any())
                            {
                                <div class="mb-2">
                                    @foreach (var tag in article.Tags.Take(3))
                                    {
                                        <span class="badge bg-secondary me-1">
                                            <i class="bi bi-tag"></i> @tag.TagName
                                        </span>
                                    }
                                    @if (article.Tags.Count > 3)
                                    {
                                        <span class="badge bg-secondary">+@(article.Tags.Count - 3) more</span>
                                    }
                                </div>
                            }

                            <!-- Article Meta -->
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <small class="text-muted">
                                    <i class="bi bi-calendar"></i> @article.CreatedDate?.ToString("MMM dd, yyyy")
                                    @if (article.CreatedBy != null)
                                    {
                                        <span class="ms-2">
                                            <i class="bi bi-person"></i> @article.CreatedBy.AccountName
                                        </span>
                                    }
                                </small>
                            </div>
                        </div>
                        
                        <div class="card-footer bg-transparent border-top-0">
                            <a asp-page="/NewsArticleManagement/Details" asp-route-id="@article.NewsArticleId"
                               class="btn btn-primary w-100">
                                <i class="bi bi-eye"></i> View Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Article pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" 
                           asp-page="/Index" 
                           asp-route-search="@Model.Search" 
                           asp-route-currentPage="@(Model.CurrentPage - 1)">
                            <i class="bi bi-chevron-left"></i> Previous
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link" 
                               asp-page="/Index" 
                               asp-route-search="@Model.Search" 
                               asp-route-currentPage="@i">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" 
                           asp-page="/Index" 
                           asp-route-search="@Model.Search" 
                           asp-route-currentPage="@(Model.CurrentPage + 1)">
                            Next <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>
                </ul>
            </nav>
        }
    }
    else
    {
        <!-- No Articles Found -->
        <div class="row">
            <div class="col-12">
                <div class="alert alert-info text-center">
                    <i class="bi bi-inbox" style="font-size: 3rem;"></i>
                    <h4 class="mt-3">No Articles Found</h4>
                    <p>
                        @if (!string.IsNullOrEmpty(Model.Search))
                        {
                            <span>No articles match your search criteria. <a asp-page="/Index">View all articles</a></span>
                        }
                        else
                        {
                            <span>There are no published articles at the moment. Check back later!</span>
                        }
                    </p>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

    <script>


        // Initialize SignalR for real-time updates
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .withAutomaticReconnect()
            .build();

        connection.on("NewArticlePublished", (authorName, articleTitle) => {
            // Show toast notification for new articles
            const toast = `
                <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <strong>New Article!</strong> ${articleTitle} by ${authorName}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            // You can implement toast notification here if needed
            console.log(`New article published: ${articleTitle} by ${authorName}`);
        });

        connection.on("ArticleDeleted", (articleId, title) => {
            console.log(`Article deleted: ${title}`);
            // Optionally reload the page or remove the article from the list
        });

        connection.start()
            .then(() => console.log('SignalR Connected on Index page'))
            .catch(err => console.error('SignalR Error:', err));





    </script>
}
